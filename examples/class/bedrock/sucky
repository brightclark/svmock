
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 0





















  
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 1























 

  
`line 26 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 30 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 31 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 33 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 37 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 38 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 40 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 44 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 45 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 47 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 51 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 52 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 54 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 58 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 59 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 61 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 65 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 66 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 68 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  









`line 78 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 79 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 81 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  









`line 91 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 92 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
        


    

  

`line 103 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
        


    

  

`line 114 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
      

  
`line 121 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
     

  


`line 130 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



 
     

  
`line 136 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
       

   

  














`line 159 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



 
       

  




















`line 185 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  







`line 194 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



  
         
 

  










`line 211 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


`line 212 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

`line 22 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2


package svunit_pkg;

  
`line 26 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 0

  const string svunit_version =  "SVUnit v3.30";
 
      

`line 30 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 0


    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_types.svh" 1





















  
`line 22 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_types.svh" 0

  
`line 23 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_types.svh" 0


  
 
   

  typedef enum {PASS=1, FAIL=0}  results_t;


  
 
   

  typedef enum {TRUE=1, FALSE=0} boolean_t;

 
`line 38 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_types.svh" 0


`line 39 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_types.svh" 0

`line 32 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_base.sv" 1






















 
  

class svunit_base;

  
 
   

  protected string name;

  
 
        

  protected results_t success = PASS;

  


  extern function new(string name);
  extern function string get_name();
  extern function results_t get_results();

  extern virtual function void report();

endclass



 
  


       

function svunit_base::new(string name);
  this.name = name;
endfunction



 
      

function string svunit_base::get_name();
  return name;
endfunction



 
       

function void svunit_base::report();
  string str = (success)? "PASSED":"FAILED";
      $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%0s::%0s", name, str));
endfunction



 
      

function results_t svunit_base::get_results();
  return success;
endfunction


`line 91 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_base.sv" 0

`line 33 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testcase.sv" 1






















 
      

class svunit_testcase extends svunit_base;

  
 
    

  local int unsigned test_count = 0;


  
 
    

  local int unsigned error_count = 0;


  
 
        

  local bit running = 0;


  


  extern function new(string name);

  extern task wait_for_error();
  extern function integer get_error_count();
  extern task give_up();

  extern function bit fail(string c, bit b, string s, string f, int l, string d = "");

  extern function void start();
  extern function void stop();
  extern function bit  is_running();

  extern function void update_exit_status();
  extern function void report();

  extern virtual task setup();
  extern virtual task teardown();

endclass



 
   


       


function svunit_testcase::new(string name);
  super.new(name);
endfunction



 
    

task svunit_testcase::wait_for_error();
  @(error_count);
endtask



 
   

function integer svunit_testcase::get_error_count();
  return error_count;
endfunction



 
       

task svunit_testcase::give_up();
  event never;
  @(never);
endtask



 
        
   


   
          
         
      
      
     

     

function bit svunit_testcase::fail(string c, bit b, string s, string f, int l, string d = "");
  string _d;
  if (b) begin
    error_count++;
    if (d != "") begin
      $sformat(_d, "[ %s ] ", d);
    end
        $display("ERROR: [%0t][%0s]: %s", $time, name, $sformatf("%s: %s %s(at %s line:%0d)",c,s,_d,f,l));
    return 1;
  end
  else begin
    return 0;
  end
endfunction



 
             

function void svunit_testcase::start();
  running = 1;
  test_count++;
endfunction



 
        

function void svunit_testcase::stop();
  running = 0;
endfunction



 
      

function bit svunit_testcase::is_running();
  return running;
endfunction



 
     

function void svunit_testcase::update_exit_status();
  if (error_count == 0)
    success = PASS;
  else
    success = FAIL;
endfunction



 
        

function void svunit_testcase::report();
  string success_str = (success)? "PASSED":"FAILED";

   


   $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%0s (%0d of %0d tests passing)",     success_str,     test_count-error_count,     test_count));
endfunction



 
           

task svunit_testcase::setup();
endtask



 
    

task svunit_testcase::teardown();
endtask


`line 214 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testcase.sv" 0

`line 34 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testsuite.sv" 1






















 
      

class svunit_testsuite extends svunit_base;

  
 
          

  local svunit_testcase list_of_testcases[$];


  


  extern function new(string name);
  extern function void add_testcase(svunit_testcase svunit);
  extern task run();

  extern function void report();

endclass



 
   


        

function svunit_testsuite::new(string name);
  super.new(name);
endfunction



 
      


           

function void svunit_testsuite::add_testcase(svunit_testcase svunit);
      $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("Registering Unit Test Case %s", svunit.get_name()));
  list_of_testcases.push_back(svunit); 
endfunction



 
      

task svunit_testsuite::run();
      $display("INFO:  [%0t][%0s]: %s", $time, name, "RUNNING");
endtask



 
        

function void svunit_testsuite::report();
  int     pass_cnt;
  string  success_str;

  foreach(list_of_testcases[i])
    list_of_testcases[i].report();

  begin
    svunit_testcase match[$] = list_of_testcases.find()  with (item.get_results() == PASS);
    pass_cnt = match.size();
  end
  
  if (pass_cnt == list_of_testcases.size()) begin
    success_str = "PASSED";
    success = PASS;
  end else begin
    success_str = "FAILED";
    success = FAIL;
  end

   $display("");
;
   


   $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%0s (%0d of %0d testcases passing)",     success_str,     pass_cnt,     list_of_testcases.size()));
endfunction

`line 111 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testsuite.sv" 0

`line 35 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testrunner.sv" 1






















 
     

class svunit_testrunner extends svunit_base;

  
 
          

  local svunit_testsuite list_of_suites[$];


  


  extern function new(string name);
  extern function void add_testsuite(svunit_testsuite suite);

  extern function void report();

endclass



 
   


        

function svunit_testrunner::new(string name);
  super.new(name);
endfunction



 
      


           

function void svunit_testrunner::add_testsuite(svunit_testsuite suite);
      $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("Registering Test Suite %0s", suite.get_name()));
  list_of_suites.push_back(suite);
endfunction



 
        

function void svunit_testrunner::report();
  int     pass_cnt;
  string  success_str;

  begin
    svunit_testsuite match[$] = list_of_suites.find()  with (item.get_results() == PASS);
    pass_cnt = match.size();
  end

  if (pass_cnt == list_of_suites.size()) begin
    success_str = "PASSED";
    success = PASS;
  end else begin
    success_str = "FAILED";
    success = FAIL;
  end

   $display("");
;
   



   $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%0s (%0d of %0d suites passing) [%s]",     success_str,     pass_cnt,     list_of_suites.size(),     svunit_version));
endfunction

`line 99 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_testrunner.sv" 0

`line 36 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

    
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_globals.svh" 1























svunit_testcase current_tc;

`line 25 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_globals.svh" 0

`line 37 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_pkg.sv" 2

endpackage

`line 1 "bedrock_pkg.sv" 0
package bedrock_pkg;
    
`line 1 "flintstones.sv" 1
class flintstones;
  function new(); endfunction

  virtual function void dino();
    
  endfunction

  virtual function int pebbles(int fred, string wilma [int]);
    return 12;
  endfunction

  virtual function void bam_bam(int barney);
    
  endfunction
endclass

`line 16 "flintstones.sv" 0

`line 2 "bedrock_pkg.sv" 2

    
`line 1 "bedrock.sv" 1
class bedrock;
  flintstones f = new();

  function void yabba_dabba_do(string wilma [int]);
    f.dino();
    f.bam_bam(f.pebbles(wilma.num(), wilma));
  endfunction
endclass

`line 9 "bedrock.sv" 0

`line 3 "bedrock_pkg.sv" 2

endpackage

`line 1 "../../../src/svmock_pkg.sv" 0
  
`line 1 "../../../src/svmock_pkg.sv" 0

  
`line 1 "../../../src/svmock_defines.svh" 1




  





















`line 26 "../../../src/svmock_defines.svh" 0


  



`line 31 "../../../src/svmock_defines.svh" 0



  


























































`line 92 "../../../src/svmock_defines.svh" 0





  

`line 98 "../../../src/svmock_defines.svh" 0






  

`line 105 "../../../src/svmock_defines.svh" 0






  
`line 1 "../../../src/svmock_mocker_defines.svh" 1
  














`line 15 "../../../src/svmock_mocker_defines.svh" 0


  









`line 26 "../../../src/svmock_mocker_defines.svh" 0


  














`line 42 "../../../src/svmock_mocker_defines.svh" 0


  









`line 53 "../../../src/svmock_mocker_defines.svh" 0


  





















`line 76 "../../../src/svmock_mocker_defines.svh" 0


  









`line 87 "../../../src/svmock_mocker_defines.svh" 0


  























`line 112 "../../../src/svmock_mocker_defines.svh" 0


  









`line 123 "../../../src/svmock_mocker_defines.svh" 0


  























`line 148 "../../../src/svmock_mocker_defines.svh" 0


  









`line 159 "../../../src/svmock_mocker_defines.svh" 0


  






























`line 191 "../../../src/svmock_mocker_defines.svh" 0


  









`line 202 "../../../src/svmock_mocker_defines.svh" 0


  
































`line 236 "../../../src/svmock_mocker_defines.svh" 0


  









`line 247 "../../../src/svmock_mocker_defines.svh" 0


  
































`line 281 "../../../src/svmock_mocker_defines.svh" 0


  









`line 292 "../../../src/svmock_mocker_defines.svh" 0


  







































`line 333 "../../../src/svmock_mocker_defines.svh" 0


  









`line 344 "../../../src/svmock_mocker_defines.svh" 0


  









































`line 387 "../../../src/svmock_mocker_defines.svh" 0


  









`line 398 "../../../src/svmock_mocker_defines.svh" 0


  









































`line 441 "../../../src/svmock_mocker_defines.svh" 0


  









`line 452 "../../../src/svmock_mocker_defines.svh" 0


  
















































`line 502 "../../../src/svmock_mocker_defines.svh" 0


  









`line 513 "../../../src/svmock_mocker_defines.svh" 0


  


















































`line 565 "../../../src/svmock_mocker_defines.svh" 0


  









`line 576 "../../../src/svmock_mocker_defines.svh" 0


  


















































`line 628 "../../../src/svmock_mocker_defines.svh" 0


  









`line 639 "../../../src/svmock_mocker_defines.svh" 0


  

























































`line 698 "../../../src/svmock_mocker_defines.svh" 0


  









`line 709 "../../../src/svmock_mocker_defines.svh" 0


  



























































`line 770 "../../../src/svmock_mocker_defines.svh" 0


  









`line 781 "../../../src/svmock_mocker_defines.svh" 0


  



























































`line 842 "../../../src/svmock_mocker_defines.svh" 0


  









`line 853 "../../../src/svmock_mocker_defines.svh" 0


  


































































`line 921 "../../../src/svmock_mocker_defines.svh" 0


  









`line 932 "../../../src/svmock_mocker_defines.svh" 0


  




































































`line 1002 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1013 "../../../src/svmock_mocker_defines.svh" 0


  




































































`line 1083 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1094 "../../../src/svmock_mocker_defines.svh" 0


  











































































`line 1171 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1182 "../../../src/svmock_mocker_defines.svh" 0


  













































































`line 1261 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1272 "../../../src/svmock_mocker_defines.svh" 0


  













































































`line 1351 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1362 "../../../src/svmock_mocker_defines.svh" 0


  




















































































`line 1448 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1459 "../../../src/svmock_mocker_defines.svh" 0


  






















































































`line 1547 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1558 "../../../src/svmock_mocker_defines.svh" 0


  






















































































`line 1646 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1657 "../../../src/svmock_mocker_defines.svh" 0


  





























































































`line 1752 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1763 "../../../src/svmock_mocker_defines.svh" 0


  































































































`line 1860 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1871 "../../../src/svmock_mocker_defines.svh" 0


  































































































`line 1968 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1979 "../../../src/svmock_mocker_defines.svh" 0


  






































































































`line 2083 "../../../src/svmock_mocker_defines.svh" 0


  









`line 2094 "../../../src/svmock_mocker_defines.svh" 0



`line 2096 "../../../src/svmock_mocker_defines.svh" 0

`line 111 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker0.svh" 1
  





















`line 22 "../../../src/__mocker0.svh" 0


  
























`line 48 "../../../src/__mocker0.svh" 0


  


















`line 68 "../../../src/__mocker0.svh" 0


  


















`line 88 "../../../src/__mocker0.svh" 0


`line 89 "../../../src/__mocker0.svh" 0

`line 112 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker1.svh" 1
  

















































`line 50 "../../../src/__mocker1.svh" 0


  
























`line 76 "../../../src/__mocker1.svh" 0


  


















`line 96 "../../../src/__mocker1.svh" 0


  


















`line 116 "../../../src/__mocker1.svh" 0


`line 117 "../../../src/__mocker1.svh" 0

`line 113 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker2.svh" 1
  













































































`line 78 "../../../src/__mocker2.svh" 0


  
























`line 104 "../../../src/__mocker2.svh" 0


  


















`line 124 "../../../src/__mocker2.svh" 0


  


















`line 144 "../../../src/__mocker2.svh" 0


`line 145 "../../../src/__mocker2.svh" 0

`line 114 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker3.svh" 1
  









































































































`line 106 "../../../src/__mocker3.svh" 0


  
























`line 132 "../../../src/__mocker3.svh" 0


  


















`line 152 "../../../src/__mocker3.svh" 0


  


















`line 172 "../../../src/__mocker3.svh" 0


`line 173 "../../../src/__mocker3.svh" 0

`line 115 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker4.svh" 1
  





































































































































`line 134 "../../../src/__mocker4.svh" 0


  
























`line 160 "../../../src/__mocker4.svh" 0


  


















`line 180 "../../../src/__mocker4.svh" 0


  


















`line 200 "../../../src/__mocker4.svh" 0


`line 201 "../../../src/__mocker4.svh" 0

`line 116 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker5.svh" 1
  

































































































































































`line 162 "../../../src/__mocker5.svh" 0


  
























`line 188 "../../../src/__mocker5.svh" 0


  


















`line 208 "../../../src/__mocker5.svh" 0


  


















`line 228 "../../../src/__mocker5.svh" 0


`line 229 "../../../src/__mocker5.svh" 0

`line 117 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker6.svh" 1
  





























































































































































































`line 190 "../../../src/__mocker6.svh" 0


  
























`line 216 "../../../src/__mocker6.svh" 0


  


















`line 236 "../../../src/__mocker6.svh" 0


  


















`line 256 "../../../src/__mocker6.svh" 0


`line 257 "../../../src/__mocker6.svh" 0

`line 118 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker7.svh" 1
  

























































































































































































































`line 218 "../../../src/__mocker7.svh" 0


  
























`line 244 "../../../src/__mocker7.svh" 0


  


















`line 264 "../../../src/__mocker7.svh" 0


  


















`line 284 "../../../src/__mocker7.svh" 0


`line 285 "../../../src/__mocker7.svh" 0

`line 119 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker8.svh" 1
  





















































































































































































































































`line 246 "../../../src/__mocker8.svh" 0


  
























`line 272 "../../../src/__mocker8.svh" 0


  


















`line 292 "../../../src/__mocker8.svh" 0


  


















`line 312 "../../../src/__mocker8.svh" 0


`line 313 "../../../src/__mocker8.svh" 0

`line 120 "../../../src/svmock_defines.svh" 2


`line 121 "../../../src/svmock_defines.svh" 0

`line 2 "../../../src/svmock_pkg.sv" 2


package svmock_pkg;
  typedef class __mocker;

  class base__with;
    string mybase_type;

    bit is_numeric;
    bit is_string;
    bit is_other;

    bit is_aggregate;

    function bit is_alphanumeic(byte _s);
      return (
              (_s >= "a" && _s <= "z") ||
              (_s >= "A" && _s <= "A") ||
              (_s == "_")
             );
    endfunction

    function void classify(string _mytype);
      int type_idx, aggregate_idx;

      for (type_idx=0; type_idx<_mytype.len(); type_idx+=1) begin
        if (!is_alphanumeic(_mytype.getc(type_idx))) begin
          for (aggregate_idx = type_idx; aggregate_idx < _mytype.len(); aggregate_idx+=1) begin
            if (_mytype.getc(aggregate_idx) == "$") break;
          end
          break;
        end
      end

      mybase_type = _mytype.substr(0, type_idx-1);
      is_string = (mybase_type == "string");
      is_numeric = ((mybase_type == "int") ||
                    (mybase_type == "logic") ||
                    (mybase_type == "bit") ||
                    (mybase_type == "wire"));
      is_other = !(is_string || is_numeric);
      is_aggregate = (aggregate_idx != 0 && aggregate_idx < _mytype.len());

      
    endfunction
  endclass

  class __mocker;
    string name;

    int timesCnt = 0;
    int signed timesExactlyExp = -1;
    int signed timesAtLeastExp = -1;
    int signed timesAtMostExp = -1;

    bit checkWith = 0;
    bit overrideReturn = 0;

    function new(string name, ref __mocker __mockers[$]);
      this.name = name;
      __mockers.push_back(this);
    endfunction


    
    
    

    function void exactly(int t);
      timesExactlyExp = t;
    endfunction

    function void at_least(int t);
      timesAtLeastExp = t;
    endfunction

    function void at_most(int t);
      timesAtMostExp = t;
    endfunction

    function void between(int min, int max);
      timesAtLeastExp = min;
      timesAtMostExp = max;
    endfunction


    
    
    

    virtual function bit check();
      check = 1;

      check &= (timesExactlyExp >= 0) ? (timesCnt == timesExactlyExp) : 1;
      check &= (timesAtLeastExp >= 0) ? (timesCnt >= timesAtLeastExp) : 1;
      check &= (timesAtMostExp  >= 0) ? (timesCnt <= timesAtMostExp)  : 1;

      return check;
    endfunction

    
    
    

    virtual function void clear();
      timesCnt = 0;
      timesExactlyExp = -1;
      timesAtLeastExp = -1;
      timesAtMostExp = -1;
      overrideReturn = 0;

      checkWith = 0;
    endfunction
  endclass

endpackage

`line 1 "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv" 0
  
`line 1 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 1























 

  
`line 26 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 30 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 31 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 33 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 37 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 38 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 40 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 44 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 45 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 47 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 51 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 52 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 54 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 58 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 59 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 61 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  



`line 65 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 66 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 68 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  









`line 78 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 79 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  
`line 81 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

  









`line 91 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

 
`line 92 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
        


    

  

`line 103 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
        


    

  

`line 114 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
      

  
`line 121 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
     

  


`line 130 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



 
     

  
`line 136 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0




 
       

   

  














`line 159 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



 
       

  




















`line 185 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


  







`line 194 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0



  
         
 

  










`line 211 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0


`line 212 "/scratch/user/njohnson/svunit-code/svunit_base/svunit_defines.svh" 0

`line 1 "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv" 2

  
`line 1 "../../../src/svmock_defines.svh" 1




  





















`line 26 "../../../src/svmock_defines.svh" 0


  



`line 31 "../../../src/svmock_defines.svh" 0



  


























































`line 92 "../../../src/svmock_defines.svh" 0





  

`line 98 "../../../src/svmock_defines.svh" 0






  

`line 105 "../../../src/svmock_defines.svh" 0






  
`line 1 "../../../src/svmock_mocker_defines.svh" 1
  














`line 15 "../../../src/svmock_mocker_defines.svh" 0


  









`line 26 "../../../src/svmock_mocker_defines.svh" 0


  














`line 42 "../../../src/svmock_mocker_defines.svh" 0


  









`line 53 "../../../src/svmock_mocker_defines.svh" 0


  





















`line 76 "../../../src/svmock_mocker_defines.svh" 0


  









`line 87 "../../../src/svmock_mocker_defines.svh" 0


  























`line 112 "../../../src/svmock_mocker_defines.svh" 0


  









`line 123 "../../../src/svmock_mocker_defines.svh" 0


  























`line 148 "../../../src/svmock_mocker_defines.svh" 0


  









`line 159 "../../../src/svmock_mocker_defines.svh" 0


  






























`line 191 "../../../src/svmock_mocker_defines.svh" 0


  









`line 202 "../../../src/svmock_mocker_defines.svh" 0


  
































`line 236 "../../../src/svmock_mocker_defines.svh" 0


  









`line 247 "../../../src/svmock_mocker_defines.svh" 0


  
































`line 281 "../../../src/svmock_mocker_defines.svh" 0


  









`line 292 "../../../src/svmock_mocker_defines.svh" 0


  







































`line 333 "../../../src/svmock_mocker_defines.svh" 0


  









`line 344 "../../../src/svmock_mocker_defines.svh" 0


  









































`line 387 "../../../src/svmock_mocker_defines.svh" 0


  









`line 398 "../../../src/svmock_mocker_defines.svh" 0


  









































`line 441 "../../../src/svmock_mocker_defines.svh" 0


  









`line 452 "../../../src/svmock_mocker_defines.svh" 0


  
















































`line 502 "../../../src/svmock_mocker_defines.svh" 0


  









`line 513 "../../../src/svmock_mocker_defines.svh" 0


  


















































`line 565 "../../../src/svmock_mocker_defines.svh" 0


  









`line 576 "../../../src/svmock_mocker_defines.svh" 0


  


















































`line 628 "../../../src/svmock_mocker_defines.svh" 0


  









`line 639 "../../../src/svmock_mocker_defines.svh" 0


  

























































`line 698 "../../../src/svmock_mocker_defines.svh" 0


  









`line 709 "../../../src/svmock_mocker_defines.svh" 0


  



























































`line 770 "../../../src/svmock_mocker_defines.svh" 0


  









`line 781 "../../../src/svmock_mocker_defines.svh" 0


  



























































`line 842 "../../../src/svmock_mocker_defines.svh" 0


  









`line 853 "../../../src/svmock_mocker_defines.svh" 0


  


































































`line 921 "../../../src/svmock_mocker_defines.svh" 0


  









`line 932 "../../../src/svmock_mocker_defines.svh" 0


  




































































`line 1002 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1013 "../../../src/svmock_mocker_defines.svh" 0


  




































































`line 1083 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1094 "../../../src/svmock_mocker_defines.svh" 0


  











































































`line 1171 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1182 "../../../src/svmock_mocker_defines.svh" 0


  













































































`line 1261 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1272 "../../../src/svmock_mocker_defines.svh" 0


  













































































`line 1351 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1362 "../../../src/svmock_mocker_defines.svh" 0


  




















































































`line 1448 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1459 "../../../src/svmock_mocker_defines.svh" 0


  






















































































`line 1547 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1558 "../../../src/svmock_mocker_defines.svh" 0


  






















































































`line 1646 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1657 "../../../src/svmock_mocker_defines.svh" 0


  





























































































`line 1752 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1763 "../../../src/svmock_mocker_defines.svh" 0


  































































































`line 1860 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1871 "../../../src/svmock_mocker_defines.svh" 0


  































































































`line 1968 "../../../src/svmock_mocker_defines.svh" 0


  









`line 1979 "../../../src/svmock_mocker_defines.svh" 0


  






































































































`line 2083 "../../../src/svmock_mocker_defines.svh" 0


  









`line 2094 "../../../src/svmock_mocker_defines.svh" 0



`line 2096 "../../../src/svmock_mocker_defines.svh" 0

`line 111 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker0.svh" 1
  





















`line 22 "../../../src/__mocker0.svh" 0


  
























`line 48 "../../../src/__mocker0.svh" 0


  


















`line 68 "../../../src/__mocker0.svh" 0


  


















`line 88 "../../../src/__mocker0.svh" 0


`line 89 "../../../src/__mocker0.svh" 0

`line 112 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker1.svh" 1
  

















































`line 50 "../../../src/__mocker1.svh" 0


  
























`line 76 "../../../src/__mocker1.svh" 0


  


















`line 96 "../../../src/__mocker1.svh" 0


  


















`line 116 "../../../src/__mocker1.svh" 0


`line 117 "../../../src/__mocker1.svh" 0

`line 113 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker2.svh" 1
  













































































`line 78 "../../../src/__mocker2.svh" 0


  
























`line 104 "../../../src/__mocker2.svh" 0


  


















`line 124 "../../../src/__mocker2.svh" 0


  


















`line 144 "../../../src/__mocker2.svh" 0


`line 145 "../../../src/__mocker2.svh" 0

`line 114 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker3.svh" 1
  









































































































`line 106 "../../../src/__mocker3.svh" 0


  
























`line 132 "../../../src/__mocker3.svh" 0


  


















`line 152 "../../../src/__mocker3.svh" 0


  


















`line 172 "../../../src/__mocker3.svh" 0


`line 173 "../../../src/__mocker3.svh" 0

`line 115 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker4.svh" 1
  





































































































































`line 134 "../../../src/__mocker4.svh" 0


  
























`line 160 "../../../src/__mocker4.svh" 0


  


















`line 180 "../../../src/__mocker4.svh" 0


  


















`line 200 "../../../src/__mocker4.svh" 0


`line 201 "../../../src/__mocker4.svh" 0

`line 116 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker5.svh" 1
  

































































































































































`line 162 "../../../src/__mocker5.svh" 0


  
























`line 188 "../../../src/__mocker5.svh" 0


  


















`line 208 "../../../src/__mocker5.svh" 0


  


















`line 228 "../../../src/__mocker5.svh" 0


`line 229 "../../../src/__mocker5.svh" 0

`line 117 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker6.svh" 1
  





























































































































































































`line 190 "../../../src/__mocker6.svh" 0


  
























`line 216 "../../../src/__mocker6.svh" 0


  


















`line 236 "../../../src/__mocker6.svh" 0


  


















`line 256 "../../../src/__mocker6.svh" 0


`line 257 "../../../src/__mocker6.svh" 0

`line 118 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker7.svh" 1
  

























































































































































































































`line 218 "../../../src/__mocker7.svh" 0


  
























`line 244 "../../../src/__mocker7.svh" 0


  


















`line 264 "../../../src/__mocker7.svh" 0


  


















`line 284 "../../../src/__mocker7.svh" 0


`line 285 "../../../src/__mocker7.svh" 0

`line 119 "../../../src/svmock_defines.svh" 2

  
`line 1 "../../../src/__mocker8.svh" 1
  





















































































































































































































































`line 246 "../../../src/__mocker8.svh" 0


  
























`line 272 "../../../src/__mocker8.svh" 0


  


















`line 292 "../../../src/__mocker8.svh" 0


  


















`line 312 "../../../src/__mocker8.svh" 0


`line 313 "../../../src/__mocker8.svh" 0

`line 120 "../../../src/svmock_defines.svh" 2


`line 121 "../../../src/svmock_defines.svh" 0

`line 2 "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv" 2


import bedrock_pkg::*;

import svmock_pkg::*;
  
`line 1 "flintstones_mock.sv" 1
      class mock_flintstones extends flintstones;
      typedef mock_flintstones PARENT;
    __mocker __mockers [$];
    function bit check();
      check = 1;
      foreach (__mockers[i]) begin
        check &= __mockers[i].check();
      end
    endfunction    function void clear();
      foreach (__mockers[i]) begin
        __mockers[i].clear();
      end
    endfunction
        class __dino_base__mocker #(type PARENT=int) extends __mocker;
  PARENT parent;
  function new(string name, ref __mocker __mockers[$], input PARENT _parent);
    super.new(name, __mockers);
    parent = _parent;
  endfunction  function void called();
    timesCnt += 1;
  endfunction  function void with_args();
  endfunction  function bit check();
    string error_signature [int];
    check = super.check();
    foreach (error_signature[i]) $display(error_signature[i]);
    return check;
  endfunction  function void clear();
    super.clear;
  endfunction  endclass  class __dino__mocker #(type PARENT=int) extends __dino_base__mocker #(PARENT);
  function new(string name, ref __mocker __mockers[$], input PARENT _parent, input __dino__mocker #(PARENT) associate = null);
    super.new(name, __mockers, _parent);
    if (associate != null) associate.map[name] = this;
  endfunction  virtual function void dino();
  endfunction  __dino__mocker #(PARENT) map [string];
  __dino__mocker #(PARENT) override;
  function void will_by_default(string i);
    override = map[i];
  endfunction  function void clear();
    super.clear();
    override = null;
  endfunction  endclass  __dino__mocker #(PARENT) __dino = new("NAME", __mockers, this);
  virtual function void dino();
    __dino.called();
    if (__dino.override != null)      __dino.override.dino();
      else      super.dino();
    endfunction

   
                             class __pebbles_base__mocker #(type PARENT=int) extends __mocker;
  PARENT parent;
  function new(string name, ref __mocker __mockers[$], input PARENT _parent);
    super.new(name, __mockers);
    parent = _parent;
  endfunction    class fred__with extends base__with;
    bit done;
      int exp;
    int act;
      function bit compare();
      return exp == act;
    endfunction    function string as_string();
      classify($typename(exp));
        if      (is_string) $sformat(as_string, "exp:%s act:%s", exp, act);
      else if (is_other)  $sformat(as_string, "exp:<unknown> act:<unknown>");
      else                $sformat(as_string, "exp:%0d act:%0d", exp, act);
        return as_string;
    endfunction  endclass     fred__with __with_0 [$];
    class wilma__with extends base__with;
    bit done;
      string exp [int];
    string act [int];
      function bit compare();
      return exp == act;
    endfunction    function string as_string();
      classify($typename(exp));
        begin
        string e_str;
 int e_size;
        string a_str;
 int a_size;
        foreach (exp[i]) begin
          e_size += 1;
          if      (is_string) $sformat(e_str, "%s%s,", e_str, exp[i]);
          else if (is_other)  $sformat(e_str, "%s<unknown>,", e_str);
          else                $sformat(e_str, "%s%0d,", e_str, exp[i]);
        end
        foreach (act[i]) begin
          a_size += 1;
          if      (is_string) $sformat(a_str, "%s%s,", a_str, act[i]);
          else if (is_other)  $sformat(a_str, "%s<unknown>,", a_str);
          else                $sformat(a_str, "%s%0d,", a_str, act[i]);
        end
        if (e_str != "") e_str = e_str.substr(0,e_str.len()-2);
        if (e_str.len() > 30) begin
          string e_start, e_end;
          e_start = e_str.substr(0,14);
          e_end = e_str.substr(e_str.len()-15,e_str.len()-1);
          $sformat(e_str, "%s...%s", e_start, e_end);
        end
        if (a_str != "") a_str = a_str.substr(0,a_str.len()-2);
        if (a_str.len() > 30) begin
          string a_start, a_end;
          a_start = a_str.substr(0,14);
          a_end = a_str.substr(a_str.len()-15,a_str.len()-1);
          $sformat(a_str, "%s...%s", a_start, a_end);
        end
        $sformat(as_string, "exp[%0d:0]:{%s} act[%0d:0]:{%s}", e_size-1, e_str, a_size-1, a_str);
      end
        return as_string;
    endfunction  endclass     wilma__with __with_1 [$];
  function void called( int fred , string wilma [int]);
    timesCnt += 1;
    for (int i=0; i<__with_0.size(); i+=1) begin
      if (!__with_0[i].done) begin
        __with_0[i].act = fred;
        __with_0[i].done = 1;
        break;
      end
    end
    for (int i=0; i<__with_1.size(); i+=1) begin
      if (!__with_1[i].done) begin
        __with_1[i].act = wilma;
        __with_1[i].done = 1;
        break;
      end
    end
  endfunction  function void with_args( int fred , string wilma [int]);
    begin
      fred__with __w = new();
      __w.exp = fred;
      __with_0.push_back(__w);
    end
    begin
      wilma__with __w = new();
      __w.exp = wilma;
      __with_1.push_back(__w);
    end
  endfunction  function bit check();
    string error_signature [int];
    check = super.check();
    for (int i=0; i<__with_0.size(); i+=1) begin
      bit comp = __with_0[i].compare();
      if (!comp) begin
        string _name = "pebbles";
        string _arg = "fred";
        if (!error_signature.exists(i))          $sformat(error_signature[i], "%sEXPECT_CALL[%0d] %s::%s miscompare: (%s)", error_signature[i], i, _name, _arg, __with_0[i].as_string());
        else          $sformat(error_signature[i], "%s\n               %s::%s miscompare: (%s)", error_signature[i], _name, _arg, __with_0[i].as_string());
      end
      check &= comp;
    end
    __with_0.delete();
    for (int i=0; i<__with_1.size(); i+=1) begin
      bit comp = __with_1[i].compare();
      if (!comp) begin
        string _name = "pebbles";
        string _arg = "wilma";
        if (!error_signature.exists(i))          $sformat(error_signature[i], "%sEXPECT_CALL[%0d] %s::%s miscompare: (%s)", error_signature[i], i, _name, _arg, __with_1[i].as_string());
        else          $sformat(error_signature[i], "%s\n               %s::%s miscompare: (%s)", error_signature[i], _name, _arg, __with_1[i].as_string());
      end
      check &= comp;
    end
    __with_1.delete();
    foreach (error_signature[i]) $display(error_signature[i]);
    return check;
  endfunction  function void clear();
    super.clear;
    __with_0.delete();
    __with_1.delete();
  endfunction  endclass  class __pebbles__mocker #(type PARENT=int) extends __pebbles_base__mocker #(PARENT);
  function new(string name, ref __mocker __mockers[$], input PARENT _parent, input __pebbles__mocker #(PARENT) associate = null);
    super.new(name, __mockers, _parent);
    if (associate != null) associate.map[name] = this;
  endfunction  virtual function int pebbles( int fred , string wilma [int]);
    return pebbles;
  endfunction  int returnsVal;
  function void returns(int r);
    overrideReturn = 1;
    returnsVal = r;
  endfunction  __pebbles__mocker #(PARENT) map [string];
  __pebbles__mocker #(PARENT) override;
  function void will_by_default(string i);
    override = map[i];
  endfunction  function void clear();
    super.clear();
    override = null;
  endfunction  endclass  __pebbles__mocker #(PARENT) __pebbles = new("NAME", __mockers, this);
  virtual function int pebbles( int fred  ,  string wilma [int] );
    __pebbles.called(fred, wilma);
    if (__pebbles.override != null)      return __pebbles.override.pebbles(fred, wilma);
    else if (__pebbles.overrideReturn)      return __pebbles.returnsVal;
      else      return super.pebbles(fred, wilma);
    endfunction

                    class __bam_bam_base__mocker #(type PARENT=int) extends __mocker;
  PARENT parent;
  function new(string name, ref __mocker __mockers[$], input PARENT _parent);
    super.new(name, __mockers);
    parent = _parent;
  endfunction    class barney__with extends base__with;
    bit done;
      int exp;
    int act;
      function bit compare();
      return exp == act;
    endfunction    function string as_string();
      classify($typename(exp));
        if      (is_string) $sformat(as_string, "exp:%s act:%s", exp, act);
      else if (is_other)  $sformat(as_string, "exp:<unknown> act:<unknown>");
      else                $sformat(as_string, "exp:%0d act:%0d", exp, act);
        return as_string;
    endfunction  endclass     barney__with __with_0 [$];
  function void called( int barney );
    timesCnt += 1;
    for (int i=0; i<__with_0.size(); i+=1) begin
      if (!__with_0[i].done) begin
        __with_0[i].act = barney;
        __with_0[i].done = 1;
        break;
      end
    end
  endfunction  function void with_args( int barney );
    begin
      barney__with __w = new();
      __w.exp = barney;
      __with_0.push_back(__w);
    end
  endfunction  function bit check();
    string error_signature [int];
    check = super.check();
    for (int i=0; i<__with_0.size(); i+=1) begin
      bit comp = __with_0[i].compare();
      if (!comp) begin
        string _name = "bam_bam";
        string _arg = "barney";
        if (!error_signature.exists(i))          $sformat(error_signature[i], "%sEXPECT_CALL[%0d] %s::%s miscompare: (%s)", error_signature[i], i, _name, _arg, __with_0[i].as_string());
        else          $sformat(error_signature[i], "%s\n               %s::%s miscompare: (%s)", error_signature[i], _name, _arg, __with_0[i].as_string());
      end
      check &= comp;
    end
    __with_0.delete();
    foreach (error_signature[i]) $display(error_signature[i]);
    return check;
  endfunction  function void clear();
    super.clear;
    __with_0.delete();
  endfunction  endclass  class __bam_bam__mocker #(type PARENT=int) extends __bam_bam_base__mocker #(PARENT);
  function new(string name, ref __mocker __mockers[$], input PARENT _parent, input __bam_bam__mocker #(PARENT) associate = null);
    super.new(name, __mockers, _parent);
    if (associate != null) associate.map[name] = this;
  endfunction  virtual function void bam_bam( int barney );
  endfunction  __bam_bam__mocker #(PARENT) map [string];
  __bam_bam__mocker #(PARENT) override;
  function void will_by_default(string i);
    override = map[i];
  endfunction  function void clear();
    super.clear();
    override = null;
  endfunction  endclass  __bam_bam__mocker #(PARENT) __bam_bam = new("NAME", __mockers, this);
  virtual function void bam_bam( int barney  );
    __bam_bam.called(barney);
    if (__bam_bam.override != null)      __bam_bam.override.bam_bam(barney);
      else      super.bam_bam(barney);
    endfunction

    class __mr_slate__mocker #(type PARENT=int) extends __dino__mocker #(PARENT);
    function new(string name, ref __mocker __mockers[$], input PARENT _parent, input __dino__mocker #(PARENT) associate = null);
      super.new(name, __mockers, _parent, associate);
    endfunction    virtual function void dino() ;
      parent.mr_slate();
    endfunction  endclass  __mr_slate__mocker #(PARENT) __mr_slate = new("mr_slate", __mockers, this, __dino);
 
  bit mr_slate_instead;
  function void mr_slate();
    mr_slate_instead = 1;
  endfunction

    class __rock_quarry__mocker #(type PARENT=int) extends __pebbles__mocker #(PARENT);
    function new(string name, ref __mocker __mockers[$], input PARENT _parent, input __pebbles__mocker #(PARENT) associate = null);
      super.new(name, __mockers, _parent, associate);
    endfunction    virtual function int pebbles( int fred  ,  string wilma [int] ) ;
      return parent.rock_quarry(fred, wilma );
    endfunction  endclass   __rock_quarry__mocker #(PARENT) __rock_quarry = new("rock_quarry", __mockers, this, __pebbles);
 
  function int rock_quarry(int fred, string wilma [int]);
    
  endfunction
  endclass   

`line 20 "flintstones_mock.sv" 0

`line 7 "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv" 2


module bedrock_unit_test;
  import svunit_pkg::svunit_testcase;

  string name = "bedrock_ut";
  svunit_testcase svunit_ut;


  
  
  
  
  bedrock uut;
  mock_flintstones mock_f = new();


  
  
  
  function void build();
    svunit_ut = new(name);

    uut = new();
    uut.f = mock_f;
  endfunction


  
  
  
  task setup();
    svunit_ut.setup();
        

    mock_f.clear();
  endtask


  
  
  
  
  task teardown();
    svunit_ut.teardown();
        

        if (svunit_pkg::current_tc.fail("fail_unless", !(mock_f.check()), "mock_f.check()", "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv", 54)) begin
      if (svunit_pkg::current_tc.is_running()) svunit_pkg::current_tc.give_up();
    end
;
  endtask


  
  
  
  
  
  
  
  
  
  
  
  
  

  string betty [int] = '{ 0:"modern", 1:"stone age", 2:"family" }; 
      task automatic run();
         $display("INFO:  [%0t][%0s]: %s", $time, name, "RUNNING");


      begin
 : dino_called_once      string _testName = "dino_called_once";
      integer local_error_count = svunit_ut.get_error_count();
      string fileName;
      int lineNumber;
          $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::RUNNING", _testName));
      svunit_pkg::current_tc = svunit_ut;
      svunit_ut.start();
      setup();
      fork        begin
          fork            begin

        mock_f.__dino.exactly(1);

    uut.yabba_dabba_do(betty);
              end
            begin
              if (svunit_ut.get_error_count() == local_error_count) begin
                svunit_ut.wait_for_error();
              end
            end
                       join_any          #0;
          disable fork;
        end
      join      svunit_ut.stop();
      teardown();
      if (svunit_ut.get_error_count() == local_error_count)           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::PASSED", _testName));
      else           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::FAILED", _testName));
      svunit_ut.update_exit_status();
    end


      begin
 : pebbles_called_with_betty      string _testName = "pebbles_called_with_betty";
      integer local_error_count = svunit_ut.get_error_count();
      string fileName;
      int lineNumber;
          $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::RUNNING", _testName));
      svunit_pkg::current_tc = svunit_ut;
      svunit_ut.start();
      setup();
      fork        begin
          fork            begin

        mock_f.__pebbles.with_args(betty.num(), betty);

    uut.yabba_dabba_do(betty);
              end
            begin
              if (svunit_ut.get_error_count() == local_error_count) begin
                svunit_ut.wait_for_error();
              end
            end
                       join_any          #0;
          disable fork;
        end
      join      svunit_ut.stop();
      teardown();
      if (svunit_ut.get_error_count() == local_error_count)           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::PASSED", _testName));
      else           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::FAILED", _testName));
      svunit_ut.update_exit_status();
    end


      begin
 : bam_bam_called_with_pebbles      string _testName = "bam_bam_called_with_pebbles";
      integer local_error_count = svunit_ut.get_error_count();
      string fileName;
      int lineNumber;
          $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::RUNNING", _testName));
      svunit_pkg::current_tc = svunit_ut;
      svunit_ut.start();
      setup();
      fork        begin
          fork            begin

        mock_f.__pebbles.returns(99);
        mock_f.__bam_bam.with_args(99);

    uut.yabba_dabba_do(betty);
              end
            begin
              if (svunit_ut.get_error_count() == local_error_count) begin
                svunit_ut.wait_for_error();
              end
            end
                       join_any          #0;
          disable fork;
        end
      join      svunit_ut.stop();
      teardown();
      if (svunit_ut.get_error_count() == local_error_count)           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::PASSED", _testName));
      else           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::FAILED", _testName));
      svunit_ut.update_exit_status();
    end


      begin
 : mr_slate_instead_of_dino      string _testName = "mr_slate_instead_of_dino";
      integer local_error_count = svunit_ut.get_error_count();
      string fileName;
      int lineNumber;
          $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::RUNNING", _testName));
      svunit_pkg::current_tc = svunit_ut;
      svunit_ut.start();
      setup();
      fork        begin
          fork            begin

        mock_f.__dino.will_by_default("mr_slate");

    uut.yabba_dabba_do(betty);

        if (svunit_pkg::current_tc.fail("fail_unless", !(mock_f.mr_slate_instead), "mock_f.mr_slate_instead", "/scratch/user/njohnson/svmock/examples/class/bedrock/./bedrock_unit_test.sv", 99)) begin
      if (svunit_pkg::current_tc.is_running()) svunit_pkg::current_tc.give_up();
    end

              end
            begin
              if (svunit_ut.get_error_count() == local_error_count) begin
                svunit_ut.wait_for_error();
              end
            end
                       join_any          #0;
          disable fork;
        end
      join      svunit_ut.stop();
      teardown();
      if (svunit_ut.get_error_count() == local_error_count)           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::PASSED", _testName));
      else           $display("INFO:  [%0t][%0s]: %s", $time, name, $sformatf("%s::FAILED", _testName));
      svunit_ut.update_exit_status();
    end



   endtask

endmodule

`line 1 ".__testsuite.sv" 0
module __testsuite;
  import svunit_pkg::svunit_testsuite;

  string name = "__ts";
  svunit_testsuite svunit_ts;
  
  
  
  
  
  
  bedrock_unit_test bedrock_ut();


  
  
  
  function void build();
    bedrock_ut.build();
    svunit_ts = new(name);
    svunit_ts.add_testcase(bedrock_ut.svunit_ut);
  endfunction


  
  
  
  task run();
    svunit_ts.run();
    bedrock_ut.run();
    svunit_ts.report();
  endtask

endmodule

`line 1 ".testrunner.sv" 0
  
   

`line 3 ".testrunner.sv" 0


module testrunner();
  import svunit_pkg::svunit_testrunner;
  
   
   

`line 10 ".testrunner.sv" 0


  string name = "testrunner";
  svunit_testrunner svunit_tr;


  
  
  
  
  __testsuite __ts();


  
  
  
  initial
  begin

      
       
    
`line 31 ".testrunner.sv" 0


    build();

      
      
    
`line 37 ".testrunner.sv" 0


    run();
    $finish();
  end


  
  
  
  function void build();
    svunit_tr = new(name);
    __ts.build();
    svunit_tr.add_testsuite(__ts.svunit_ts);
  endfunction


  
  
  
  task run();
    __ts.run();
    svunit_tr.report();
  endtask


endmodule

